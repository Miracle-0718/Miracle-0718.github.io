[{"title":"软件工程大纲","url":"/2022/09/07/软件工程大纲/","content":"本大纲依据shu cs软件工程教学大纲，参考教材[软件工程导论（第6版）](http://www.tup.tsinghua.edu.cn/bookscenter/book_05016405.html)\n\n# 第一章 软件工程学概述\n\n# 软件危机\n- 定义\n- 典型表现\n- 产生原因\n- 消除途径\n\n# 软件工程\n## 定义\n- 略\n## 本质特征\n（1）软件工程关注大型程序的构造。\n\n（2）软件工程的**中心课题是控制复杂性。**\n\n（3）软件经常变化。\n\n（4）开发软件的效率非常重要。\n\n（5）和谐的合作是开发软件的关键。\n\n（6）软件必须有效的支持它的用户。\n\n（7）软件工程领域中是由一种**文化背景的人**替具有另一种文化背景的人创造产品。\n## 基本原理\n（1）用**分阶段**的生命周期计划严格管理。\n\n（2）坚持进行阶段评审。\n\n（3）实行严格的产品控制。\n\n（4）采用现代程序设计技术。\n\n（5）结果应能清楚地审查。\n\n（6）开发小组人员应该**少而精**。\n\n（7）承认**不断改进**软件工程实践的必要性\n\n# 软件工程学\n## 定义\n## 三要素\n方法、工具、过程\n\n传统方法、面向对象方法\n\n# 软件生命周期\n## 定义时期\n-   **问题定义** “要解决的问题是什么”\n-   **可行性研究** “对于上一个阶段所确定的问题有行得通的解决方法吗？”\n-   **需求分析** “为了解决这个问题，目标系统必须做什么”\n\n## 开发时期\n-   **总体设计** “概括的说，应该怎样实现目标系统”\n-   **详细设计** “应该怎样具体地实现这个系统呢？”\n-   **编码和单元测试** 写出正确的容易理解、容易维护的程序模块\n-   **综合测试** 通过各种类型的测试使软件达到预定的要求\n\n## 维护时期\n-   **软件维护** 使系统持久地满足用户的需要\n    -   改正性维护\n    -   适应性维护\n    -   完善性维护\n    -   预防性维护\n\n# 软件过程\n描述软件过程——\n## 生命周期模型（过程模型）\n瀑布模型\n\n快速原型模型\n\n增量模型\n\n螺旋模型\n\n喷泉模型\n\n【腾讯文档】模型对比表\n\n<https://docs.qq.com/sheet/DT2FVU3Ntdkt4Z3Rw>\n\n# 第二章 可行性研究\n\n## 定义\n目的不是要解决问题，而是**确定问题是否值得去解决**\n\n用最小的代价在尽可能短的时间内确定问题是否能够解决\n\n## 四种可行性\n\n## 系统流程图\n新系统的逻辑模型变成**物理**模型\n\n概括地描绘**物理系统**的传统工具\n\n## 数据流图\n没有物理元素\n\n描绘**信息流和数据**从输入移动到输出过程中所经受的变换\n\n![image1](../resources/软件工程/image1-14.png)\n\n## 数据字典\n对数据流图中包含的所有元素的定义的集合\n-   顺序 +\n-   选择 \\[\\|\\]\n-   重复 {}\n-   可选()\n\n\n# 第三章 需求分析\n\n\n提出**完整、准确、清晰和具体**的要求\n\n# 需求分析的任务\n## 确定对系统的综合要求\n功能需求\n\n性能需求\n\n可靠性和可用性需求\n\n出错处理需求\n\n接口需求\n\n约束\n\n逆向需求\n\n将来可能提出的要求\n## 分析系统的数据要求\n## 导出系统的逻辑模型\n实体——联系图（ER图）\n\n状态转换图\n\n其他：层次方框图、Warnier图\n## 修正系统开发计划\n\n## 与用户沟通获取需求的方法\n\n## 需求验证的四个方面\n-   一致性：需求不互相矛盾\n-   完整性：包括用户需要的每一个功能或性能\n-   现实性：现有技术可以实现\n-   有效性：需求是正确的，确实能解决用户面对的问题\n\n\n# 第五章 总体设计\n\n## 设计原理\n-   模块化\n    -   由边界元素限定的相邻程序元素\n-   抽象\n-   逐步求精\n-   信息隐藏和局部化\n-   模块独立\n    -   高内聚、低耦合\n\n## 启发规则\n改进软件结构提高模块独立性\n\n模块**规模**应该**适中**\n\n深度、宽度、删除和扇入都应适当\n\n模块的**作用域应在控制域之内**\n\n力争降低模块接口的复杂程度\n\n设计**单入口单出口**的模块\n\n模块功能应该可以预测\n\n## 描绘软件结构的图形工具\n层次图、HIPO图、结构图\n\n## 面向数据流的设计方法\n事物流\n\n变换流\n\n# 第六章 详细设计\n\n## 结构程序设计\n\n## 结构化程序\n**顺序、分支**和**循环**三种基本控制结构和程序块\n\n**“一个入口和一个出口**”的原则\n\n## 消除goto语句\n增加辅助变量\n\n改变程序执行顺序\n\n## \n## 设计工具\n- 程序流程图\n\n- 盒图\n\n- PAD图\n\n- 判定表、判定树\n\n\n# 第七章 实现\n\n## 软件测试\n通过执行程序，并从多种角度观测程序执行时的行为，从而发现程序中的错误。\n\n## 目标\n通过有限个测试用例，尽可能多地发现程序中的错误。\n\n## 方法\n白盒测试\n\n黑盒测试\n\n## 测试步骤\n-   单元测试\n-   集成测试\n    -   驱动程序\n        -   模拟被测模块的调用程序（**父模块**）\n    -   存根程序\n        -   模拟被测模块的**子模块**\n    -   集成方法\n        -   非渐增式\n        -   渐增式\n            -   自顶向下\n            -   自底向上\n            -   三明治式\n\n-   验收测试\n\n# 第八章 维护\n\n## 软件维护的特点\n结构化和非结构化维护差别巨大\n\n## 决定软件可维护性的因素\n1. 可理解性\n2. 可测试性\n3. 可修改性\n4. 可移植性\n5. 可重用性\n\n## 文档\n文档是影响软件可维护性的决定因素。\n\n所以文档比程序代码更重要\n\n- 用户文档\n\n- 系统文档\n\n# 面向对象部分\n\n**面向对象=类+对象+继承+通信**\n\n- 功能模型：用例图\n- 对象模型：类图（类与类之间的静态关系）\n- 动态模型：顺序图、状态图\n\n## 面向对象方法学的优点\n- 与人类习惯的思维方式一致\n\n- 稳定性好\n\n- 可重用性好\n\n- 较易开发大型软件产品\n\n- 可维护性好\n\n## 面向对象设计的准则\n- 模块化\n\n- 抽象\n\n- 信息隐藏\n\n- 弱耦合\n\n- 强内聚\n\n- 可重用\n\n## 启发规则\n- 设计结果应该清晰易懂\n\n- 一般-特殊结构的深度应适当\n\n- 设计简单的类\n\n- 使用简单的协议\n\n- 使用简单的服务\n\n- 把设计变动减至最小\n\n## 重用\n仅关注软件成分重用\n\n### 软件成分重用级别\n- 代码重用：源代码剪贴、源代码包含（ include ）、继承；\n\n- 设计结果重用\n\n- 分析结果重用\n\n#### 可重用软件成分\n项目计划、成本估计、体系结构、需求模型和规格说明、设计、 源代码、用户文档和技术文档、用户界面、数据、测试用例。\n\n#### 类构件\n类是理想的可重用构件\n\n### 重用方式\n\n- 实例重用\n\n- 继承重用\n\n- 多态重用\n\n    - 转换接口：派生类重新定义父类中的服务。\n\n    - 扩充接口：如果派生类中没有给出扩充接口的新算法，则将继承父类中的算法\n\n### 系统分解\n\n设计问题域子系统\n\n调整需求\n\n重用已有的类\n\n把问题域类组合在一起\n\n增添一般化类以建立协议\n\n调整继承层次\n\n### 设计关联\n\n- 单向关联：指针\n\n- 双向关联：\n\n    属性实现一个方向的关联\n\n    属性实现两个方向的关联\n\n    独立的关联对象实现双向关联\n\n### 设计优化\n\n提高效率的几项技术\n\n增加冗余关联以提高访问效率\n\n调整查询次序\n\n保留派生属性\n\n调整继承关系\n\n#### 抽象与具体\n\n为提高继承程度修改类定义\n\n利用委托实现行为共享\n\n","tags":["笔记","软件工程"]},{"title":"博客搭建","url":"/2022/09/06/博客搭建/","content":"# hexo 个人博客搭建\n## 参考教程\n- 超详细个人教程[雀栎的hexo个人博客搭建](https://skylark1003.gitee.io/2022/07/01/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/)  感恩\n- 其他教程 \n  \n  [Hexo-零基础搭建个人博客(详解)](https://blog.csdn.net/weixin_45019350/article/details/121901433)\n\n  [GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249/)\n\n## 报错处理\n+ 连接远程仓库报错\n  - 解除SSL验证 https://blog.csdn.net/MAINKEYS/article/details/120219721\n  - 或修改成ssh地址 https://www.pudn.com/news/62e6438a864d5c73ac324664.html\n## 主题设置\n### [aircloud](https://github.com/aircloud/hexo-theme-aircloud)\n\n看了很多主题都觉得不是非常满意，使用比较多的主题(next/pure),源码可能比较复杂，所以从当前主题开始修改\n\n### 主题修改\n#### 背景渐变色\ncss样式设置参考 [Hexo之更换背景及透明度](https://www.cnblogs.com/MoYu-zc/p/14397889.html)\n\n修改样式文件：**hexo-theme-aircloud-master\\source\\css** \n```\nbody {\n  margin-left: calc(100vw - 100%) !important;\n  -webkit-text-size-adjust: none;\n  //背景渐变 颜色可调\n  background: #C9D6FF;  \n  background: -webkit-linear-gradient(to left, #E2E2E2, #C9D6FF); \n  background: linear-gradient(to left, #E2E2E2, #C9D6FF);\n}\n```\n\n```\n.index-container .index-middle {\n  max-width: 784px;\n  flex: 1;\n  margin-top: 50px; //设置上外间距\n}\n```\n\n#### 左侧导航栏修改\n\n修改字体，增加内容标签\n\n字体展示[CSS font-family中文字体英文名称展示\n](https://www.zhangxinxu.com/study/201703/font-family-chinese-english.html)\n\n布局文件(**\\layout\\_partial\\nav.ejs**)新增description标签：\n\n同时airloud.css文件新增对应样式\n\n#### 代码复制标签\n\n\n# OneNote转Markdown\nhttps://github.com/alxnbl/onenote-md-exporter\n\n\n\n","tags":["记录"]},{"title":"Hello World","url":"/2022/09/06/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]